import{_ as n,o as s,c as a,e}from"./app.0e0bd4df.js";const p={},t=e(`<h2 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>    <span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
        Red<span class="token punctuation">,</span>  
        Yellow<span class="token punctuation">,</span>
        Bule
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 namespace\u7684\u65B9\u5F0F\u4E3A\u679A\u4E3E\u6DFB\u52A0\u9759\u6001\u65B9\u6CD5</p><div class="language-typescritp ext-typescritp line-numbers-mode"><pre class="language-typescritp"><code>    enum Color {
        Red,
        Yellow,
        Bule
    }
    namespace Color {
        export function logColor(color: Color){
            console.log(color)
        }
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> otherArg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// ....</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B57\u9762\u63A8\u5BFC</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token comment">// req.method \u88AB\u63A8\u5BFC\u4E3A string \u7C7B\u578B\uFF0C\u6B64\u5904\u4F1A\u62A5\u9519 Argument of type &#39;string&#39; is not assignable to parameter of type &#39;&quot;GET&quot; | &quot;POST&quot;&#39;.</span>
<span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> req<span class="token punctuation">.</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token keyword">as</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6216</span>
<span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> req<span class="token punctuation">.</span>method <span class="token keyword">as</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-\u548C-interface-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#type-\u548C-interface-\u7684\u533A\u522B" aria-hidden="true">#</a> type \u548C interface \u7684\u533A\u522B</h2><p>https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#functions interface \u53EF\u7EE7\u627F\u7684\uFF0C\u53EF\u4EE5\u901A\u8FC7\u91CD\u590D\u5B9A\u4E49 interface \u5BF9\u5DF2\u6709\u7684 interface \u8FDB\u884C\u5B57\u6BB5\u7684\u8865\u5145\uFF0Ctype \u5728\u5B9A\u4E49\u540E\u4E0D\u80FD\u518D\u8FDB\u884C\u5B9A\u4E49\u3002<br> interface \u53EA\u80FD\u7528\u4E8E\u5B9A\u4E8E\u5BF9\u8C61\uFF0C\u800C\u4E0D\u80FD\u5B9A\u4E49\u539F\u59CB\u7C7B\u578B\uFF1Btype \u53EF\u4EE5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// An interface cannot extend a primitive type like &#39;string&#39;; an interface can only extend named types and classes</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">P1</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P2</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P3</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="unknow\u3001ant-\u548C-never" tabindex="-1"><a class="header-anchor" href="#unknow\u3001ant-\u548C-never" aria-hidden="true">#</a> unknow\u3001ant \u548C never</h2><p>unknow \u66F4\u52A0\u5B89\u5168\uFF0C\u5BF9\u4E00\u4E2A unknow \u7C7B\u578B\u7684\u6267\u884C\u64CD\u4F5C\u4F1A\u62A5\u9519\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Object is of type &#39;unknown&#39;.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>never \u7C7B\u578B\u4E00\u822C\u662F\u51FD\u6570\u4E2D\u629B\u51FA\u5F02\u5E38\u6216\u7EC8\u6B62\u6267\u884C\u65F6\u7684\u8FD4\u56DE\u503C\u3002\u540C\u65F6\u5982\u679C\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u6CA1\u6709\u5269\u4F59\u7684\u7C7B\u578B\u65F6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something else</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">;</span> <span class="token comment">// has type &#39;never&#39;!</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="object-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#object-\u7C7B\u578B" aria-hidden="true">#</a> object \u7C7B\u578B</h2><p><strong>\u6CDB\u578B\u5BF9\u8C61\u7C7B\u578B</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Box<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5143\u7EC4\u7C7B\u578B</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>t<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u7C7B\u578B\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u64CD\u4F5C" aria-hidden="true">#</a> \u7C7B\u578B\u64CD\u4F5C</h1><p>typescript \u62E5\u6709\u5F88\u5F3A\u5927\u7684\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5176\u4ED6 type \u521B\u5EFA type\u3002https://www.typescriptlang.org/docs/handbook/2/types-from-types.html</p><h2 id="\u6CDB\u578B\u6784\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u6784\u5EFA" aria-hidden="true">#</a> \u6CDB\u578B\u6784\u5EFA</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6CDB\u578B\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Lala<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> tag<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>tag<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tag <span class="token operator">=</span> tag<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> la<span class="token operator">:</span> Lala<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Lala</span><span class="token punctuation">(</span><span class="token string">&quot;lala&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">{</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">loggingIdentity</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type <span class="token keyword">extends</span> Lengthwise<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6CDB\u578B\u7EA6\u675F\u4E2D\u5B9A\u4E49\u7C7B\u578B\u53C2\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token punctuation">,</span> Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>type<span class="token operator">:</span> Type<span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> type<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p1<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;hen&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">getProperty</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">getProperty</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keyof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#keyof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> keyof \u64CD\u4F5C\u7B26</h2><p>keyof \u64CD\u4F5C\u7B26\u63A5\u53D7\u4E00\u4E2A object \u7C7B\u578B\uFF0C\u751F\u6210\u8FD9\u4E2A object \u7684\u4E00\u4E2A string \u6216 number \u7C7B\u578B\u7684\u5C5E\u6027\u503C\u7684\u8054\u5408\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Point</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>n<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u6709\u7D22\u5F15\u5668\uFF0Ckeyof \u4F1A\u8FD4\u56DE string | number \u7684\u8054\u5408\u7C7B\u578B</span>
<span class="token comment">// \u5728 javscript \u4E2D\u53EF\u4EE5\u901A\u8FC7 obj[0] \u7684\u5F62\u5F0F\u53D6\u503C\uFF0C\u6700\u7EC8 obj[0] \u4F1A\u8F6C\u5316\u4E3A obj[&quot;0&quot;]\u3002\u6240\u4EE5\u8FD9\u91CC\u4F1A\u8FD4\u56DE string | number \u7684\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">PointKeys</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Point<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u64CD\u4F5C\u7B26</h2><p>\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u5F15\u7528\u4E00\u4E2A\u53D8\u91CF\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2<span class="token operator">:</span> <span class="token keyword">typeof</span> str <span class="token operator">=</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u83B7\u53D6\u4E00\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\u65F6\uFF0C\u53EF\u4EE5\u7ED3\u5408 <code>ReturnType</code> \u548C <code>typeof</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;fn&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u62A5\u9519\uFF0Cfn \u662F\u4E00\u4E2A\u503C\uFF0C\u5374\u88AB\u5F53\u6210\u4E00\u4E2A\u7C7B\u578B\u5904\u7406</span>
<span class="token keyword">type</span> <span class="token class-name">FnReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>fn<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\uFF0C\u83B7\u53D6 fn \u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">FnReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> fn<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>typeof \u64CD\u4F5C\u7B26\uFF0C\u4E00\u822C\u7528\u4E8E\u53D8\u91CF\u540D\u548C\u4ED6\u7684\u5C5E\u6027\u4E0A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">NameType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ObjType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" aria-hidden="true">#</a> \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B</h2><p>\u901A\u8FC7\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\u6765\u83B7\u53D6\u5176\u4ED6\u7C7B\u578B\u4E0A\u7684\u5C5E\u6027\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> alive<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Age</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// numberi</span>


<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;\u674E\u8363&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
  role<span class="token operator">:</span> <span class="token string">&quot;student&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">PropertyType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> p<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u7D22\u5F15\u5230\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u503C,\u4F1A\u62A5\u9519</span>
<span class="token keyword">type</span> <span class="token class-name">PName</span> <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">PNameType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> p<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\uFF0C\u83B7\u53D6\u6570\u7EC4\u7684\u5143\u7D20\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> roles <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;ganyu&quot;</span><span class="token punctuation">,</span>
    role<span class="token operator">:</span> <span class="token string">&quot;secretary&quot;</span><span class="token punctuation">,</span>
    element<span class="token operator">:</span> <span class="token string">&quot;ice&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;keqing&quot;</span><span class="token punctuation">,</span>
    role<span class="token operator">:</span> <span class="token string">&quot;qixing&quot;</span><span class="token punctuation">,</span>
    element<span class="token operator">:</span> <span class="token string">&quot;thunder&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">GenshinRole</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> roles<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6761\u4EF6\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">live</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">woof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">type</span> <span class="token class-name">Example1</span> <span class="token operator">=</span> Dog <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token comment">// \u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u901A\u8FC7 infer \u63A8\u65AD\u51FA\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Flatten<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Type <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> Item<span class="token operator">&gt;</span></span> <span class="token operator">?</span> Item <span class="token operator">:</span> Type<span class="token punctuation">;</span>
<span class="token comment">// \u901A\u8FC7 infer \u63A8\u65AD\u6CDB\u578B\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">GetReturnType<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Type <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> Return
  <span class="token operator">?</span> Return
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Fn1ReturnType</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name">Fn1ReturnType</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6620\u5C04\u7C7B\u578B,\u57FA\u4E8E\u53E6\u4E00\u4E2A\u6709\u7D22\u5F15\u5668\u7684\u7C7B\u578B\u4E0A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FeatureFlags</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">darkMode</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function-variable function">newUserProfile</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">OptionsFlags<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">BooleanHoreses</span> <span class="token operator">=</span> OptionsFlags<span class="token operator">&lt;</span>FeatureFlags<span class="token operator">&gt;</span><span class="token punctuation">;</span> 

<span class="token comment">// \u4FEE\u9970\u7B26\u7684\u6620\u5C04, readonly \u548C ? \u64CD\u4F5C\u7B26\u53EF\u4EE5\u5728\u6620\u5C04\u7684\u8FC7\u7A0B\u4E2D\u53EF\u7528</span>
<span class="token keyword">type</span> <span class="token class-name">CreateMutable<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">-</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">type</span> <span class="token class-name">LockedAccount</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">type</span> <span class="token class-name">UnlockedAccount</span> <span class="token operator">=</span> CreateMutable<span class="token operator">&lt;</span>LockedAccount<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u79FB\u9664\u53EF\u9009\u9879</span>
<span class="token keyword">type</span> <span class="token class-name">Concrete<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">type</span> <span class="token class-name">MaybeUser</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> Concrete<span class="token operator">&lt;</span>MaybeUser<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8FC7 as \u5BF9\u952E\u503C\u7684\u91CD\u6620\u5C04</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ts
type AddGetter&lt;Type&gt; = {
  [key in keyof Type as </span><span class="token template-punctuation string">\`</span></span><span class="token keyword">get</span>$<span class="token punctuation">{</span>Capitalize<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">&amp;</span> key<span class="token operator">&gt;</span><span class="token punctuation">}</span>\`<span class="token punctuation">]</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;lala&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> AddGetter<span class="token operator">&lt;</span><span class="token keyword">typeof</span> p<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),o=[t];function c(l,i){return s(),a("div",null,o)}var u=n(p,[["render",c],["__file","index.html.vue"]]);export{u as default};
